from __future__ import annotations

from typing import TYPE_CHECKING

from rest_framework import mixins
from rest_framework.viewsets import GenericViewSet
from rest_framework.pagination import LimitOffsetPagination
from django_filters.rest_framework import DjangoFilterBackend

from api.common.routers import CustomViewRouter
from api.{{ app_name }} import serializers

if TYPE_CHECKING:
    from rest_framework.request import Request

router = CustomViewRouter()

@router.register(r"{{ app_name }}/", name="{{ app_name }}")
class {{ camel_case_app_name }}ViewSet(
    mixins.CreateModelMixin,
    mixins.RetrieveModelMixin,
    mixins.ListModelMixin,
    mixins.UpdateModelMixin,
    mixins.DestroyModelMixin,
    GenericViewSet,
):
    serializer_class = serializers.{{ camel_case_app_name }}Serializer
    queryset = {{ camel_case_app_name }}.objects.all()
    pagination_class = LimitOffsetPagination
    filter_backends = [DjangoFilterBackend]
    filterset_fields = []
